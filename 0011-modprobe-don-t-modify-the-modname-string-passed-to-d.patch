From edce6f197f2bce48f29bd40f4df4ff822ed760f3 Mon Sep 17 00:00:00 2001
From: Andreas Robinson <andr345@gmail.com>
Date: Sat, 3 Oct 2009 21:20:23 +0200
Subject: [PATCH 11/19] modprobe: don't modify the modname string passed to
 do_modprobe

The function will work on a copy instead.

Signed-off-by: Andreas Robinson <andr345@gmail.com>
(cherry picked from commit 36b8d179a5ae4a3c2a27a869bcbfd535d7d4a2e0)
---
 modprobe.c | 15 +++++++++------
 1 file changed, 9 insertions(+), 6 deletions(-)

diff --git a/modprobe.c b/modprobe.c
index 470bb25..2021f44 100644
--- a/modprobe.c
+++ b/modprobe.c
@@ -1286,7 +1286,7 @@ static char *gather_options(char *argv[])
 static int handle_module(const char *modname,
 			  struct list_head *todo_list,
 			  const char *newname,
-			  char *options,
+			  const char *options,
 			  struct module_options *modoptions,
 			  struct module_command *commands,
 			  const char *cmdline_opts,
@@ -1325,21 +1325,22 @@ static int handle_module(const char *modname,
 	return 0;
 }
 
-int do_modprobe(char *modname,
-		char *newname,
-		char *cmdline_opts,
+int do_modprobe(const char *modulename,
+		const char *newname,
+		const char *cmdline_opts,
 		const char *configname,
 		const char *dirname,
 		errfn_t error,
 		modprobe_flags_t flags,
 		int io_flags)
 {
+	char *modname;
 	struct modprobe_conf conf = {};
 	LIST_HEAD(list);
 	int failed = 0;
 
 	/* Convert name we are looking for */
-	underscores(modname);
+	modname = underscores(NOFAIL(strdup(modulename)));
 
 	/* Returns the resolved alias, options */
 	parse_toplevel_config(configname, modname, &conf, 0, flags & mit_remove);
@@ -1399,12 +1400,14 @@ int do_modprobe(char *modname,
 	} else {
 		if (flags & mit_use_blacklist
 		    && find_blacklist(modname, conf.blacklist))
-			return failed;
+			goto out;
 
 		failed |= handle_module(modname, &list, newname, cmdline_opts,
 			conf.options, conf.commands, cmdline_opts,
 			configname, dirname, error, flags, io_flags);
 	}
+out:
+	free(modname);
 	return failed;
 }
 
-- 
1.9.0

