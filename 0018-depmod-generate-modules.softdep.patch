From bfeeb358b883869aa405e8efb02c54dd8928b8bb Mon Sep 17 00:00:00 2001
From: Andreas Robinson <andr345@gmail.com>
Date: Thu, 5 Nov 2009 16:24:52 +0100
Subject: [PATCH 18/19] depmod: generate modules.softdep

Signed-off-by: Andreas Robinson <andr345@gmail.com>
---
 depmod.c | 30 ++++++++++++++++++++++++++++++
 1 file changed, 30 insertions(+)

diff --git a/depmod.c b/depmod.c
index 033a742..1d28a83 100644
--- a/depmod.c
+++ b/depmod.c
@@ -871,6 +871,35 @@ static void output_aliases_bin(struct module *modules, FILE *out, char *dirname)
 	index_destroy(index);
 }
 
+static int output_softdeps(struct module *modules, FILE *out, char *dirname)
+{
+	struct module *i;
+	struct elf_file *file;
+	struct string_table *tbl;
+	int j;
+
+	fprintf(out, "# Soft dependencies extracted from modules themselves.\n");
+	fprintf(out, "# Copy, with a .conf extension, to /etc/modprobe.d to use "
+		"it with modprobe.\n");
+	for (i = modules; i; i = i->next) {
+		char modname[strlen(i->pathname)+1];
+
+		file = i->file;
+		filename2modname(modname, i->pathname);
+
+		/* Grab from new-style .modinfo section. */
+		tbl = file->ops->load_strings(file, ".modinfo", NULL);
+		for (j = 0; tbl && j < tbl->cnt; j++) {
+			const char *p = tbl->str[j];
+			if (strstarts(p, "softdep="))
+				fprintf(out, "softdep %s %s\n",
+					modname, p + strlen("softdep="));
+		}
+		strtbl_free(tbl);
+	}
+	return 1;
+}
+
 struct depfile {
 	char *name;
 	void (*func)(struct module *, FILE *, char *dirname);
@@ -890,6 +919,7 @@ static struct depfile depfiles[] = {
 	{ "modules.seriomap", output_serio_table, 1 },
 	{ "modules.alias", output_aliases, 0 },
 	{ "modules.alias.bin", output_aliases_bin, 0 },
+	{ "modules.softdep", output_softdeps, 0 },
 	{ "modules.symbols", output_symbols, 0 },
 	{ "modules.symbols.bin", output_symbols_bin, 0 }
 };
-- 
1.9.0

