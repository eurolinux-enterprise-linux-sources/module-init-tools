From cb10e9103189b97d272c4c015027555f615f9b02 Mon Sep 17 00:00:00 2001
From: Andreas Robinson <andr345@gmail.com>
Date: Sun, 4 Oct 2009 17:18:38 +0200
Subject: [PATCH 14/19] modprobe: add simple softdep loop detector

Signed-off-by: Andreas Robinson <andr345@gmail.com>
(cherry picked from commit f2150e81dbeb547f9fc70b8c622c38cc6f987a50)
---
 modprobe.c | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/modprobe.c b/modprobe.c
index af2a1a2..bdf3668 100644
--- a/modprobe.c
+++ b/modprobe.c
@@ -51,6 +51,13 @@
 
 int use_binary_indexes = 1; /* default to enabled. */
 
+/* Limit do_softdep/do_modprobe recursion.
+ * This is a simple way to handle dependency loops
+ * caused by poorly written softdep commands.
+ */
+static int recursion_depth = 0;
+const int MAX_RECURSION = 50; /* Arbitrary choice */
+
 extern long init_module(void *, unsigned long, const char *);
 extern long delete_module(const char *, unsigned int);
 
@@ -669,6 +676,11 @@ static void do_softdep(const struct module_softdep *softdep,
        struct string_table *pre_modnames, *post_modnames;
        int i, j;
 
+       if (++recursion_depth >= MAX_RECURSION)
+	    fatal("modprobe: softdep dependency loop encountered %s %s\n",
+		    (flags & mit_remove) ? "removing" : "inserting",
+		    softdep->modname);
+
        if (flags & mit_remove) {
                /* Reverse module order if removing. */
                pre_modnames = softdep->post;
@@ -1605,6 +1617,8 @@ int main(int argc, char *argv[])
 	int failed = 0;
 	modprobe_flags_t flags = 0;
 
+	recursion_depth = 0;
+
 	/* Prepend options from environment. */
 	argv = merge_args(getenv("MODPROBE_OPTIONS"), argv, &argc);
 
-- 
1.9.0

